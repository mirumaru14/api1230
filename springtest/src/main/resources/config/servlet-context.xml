<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- InternalResourceViewResolver : 경로를 잡아주는 클래스. -->
	</beans:bean>
	
	<!-- 파일업로드시 multipart 받는 resolver 클래스 -->
	<!-- enctype으로 myltipart/form-data 이면 이 객체가 주입된다. -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"/>
 	</beans:bean>
 	
 	<!-- 파일업로드되는 경로 -->
 	<beans:bean id="uploadPath" class="java.lang.String">
 	<beans:constructor-arg value="D:/dev1230/uploadFiles"/>
 	</beans:bean>
 	
 	
 	<!-- AuthInterceptor 등록 -->
 	<beans:bean id="authInterceptor" class="com.myezen.myapp.interceptor.AuthInterceptor"> 	 	
 	</beans:bean>
 	
 	<!-- LoginInterceptor 등록 -->
 	<beans:bean id="loginInterceptor" class="com.myezen.myapp.interceptor.LoginInterceptor">
 	</beans:bean>
 	
 	<interceptors>
	 	<interceptor>	<!-- boardWrite.do 로 들어갈 때, AuthInterceptor가 작동하도록 등록-->
	 	<mapping path="/board/boardWrite.do"></mapping>
	 	<mapping path="/board/boardModify.do"></mapping>
	 	<mapping path="/board/boardDelete.do"></mapping>
	 	<mapping path="/board/boardReply.do"></mapping>
	 	<!-- boardcontents를 제외한 board들은 모두 로그인 이후에만 작동하도록 경로설정. -->
	 	<beans:ref bean="authInterceptor"/>	 	
	 	</interceptor>
	 	
	 	<interceptor>
	 	<mapping path="/member/memberLoginAction.do"></mapping>
	 	<beans:ref bean="loginInterceptor"/>
	 	</interceptor>
 	</interceptors>
	
	<!-- 컴포넌트 Bean 검색범위 지정 -->
	<context:component-scan base-package="com.myezen.myapp.controller" />
	
	
	
</beans:beans>
